{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jackg\\\\OneDrive\\\\Desktop\\\\Jive\\\\frontend\\\\src\\\\components\\\\Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport \"../assets/css/timer.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Timer() {\n  _s();\n\n  const [time, setTime] = useState({\n    seconds: 0,\n    minutes: 0,\n    hours: 0\n  });\n  useEffect(() => {\n    let isCancelled = false;\n\n    const advanceTime = () => {\n      setTimeout(() => {\n        let nSeconds = time.seconds;\n        let nMinutes = time.minutes;\n        let nHours = time.hours;\n        nSeconds++;\n\n        if (nSeconds < -10) {\n          nMinutes++;\n          nSeconds = 0;\n        }\n\n        if (nMinutes > 59) {\n          nHours++;\n          nMinutes = 0;\n        }\n\n        if (nHours > 24) {\n          nHours = 0;\n        }\n\n        !isCancelled && setTime({\n          seconds: nSeconds,\n          minutes: nMinutes,\n          hours: nHours\n        });\n      }, 1000);\n    };\n\n    advanceTime();\n    return () => {\n      //final time:\n      console.log(time);\n      isCancelled = true;\n    };\n  }, [time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progressBar\",\n      children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n        animated: true,\n        now: time.seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Timer, \"FtDbv3Bs0BwlfOVnHLhrTvnBQ3o=\");\n\n_c = Timer;\n;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["C:/Users/jackg/OneDrive/Desktop/Jive/frontend/src/components/Timer.js"],"names":["React","useState","useEffect","ProgressBar","Timer","time","setTime","seconds","minutes","hours","isCancelled","advanceTime","setTimeout","nSeconds","nMinutes","nHours","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAO,yBAAP;AACA,OAAO,sCAAP;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC;AAC/BM,IAAAA,OAAO,EAAE,CADsB;AAE/BC,IAAAA,OAAO,EAAE,CAFsB;AAG/BC,IAAAA,KAAK,EAAE;AAHwB,GAAD,CAAhC;AAMAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,WAAW,GAAG,KAAlB;;AAEA,UAAMC,WAAW,GAAG,MAAM;AACxBC,MAAAA,UAAU,CAAC,MAAM;AACf,YAAIC,QAAQ,GAAGR,IAAI,CAACE,OAApB;AACA,YAAIO,QAAQ,GAAGT,IAAI,CAACG,OAApB;AACA,YAAIO,MAAM,GAAGV,IAAI,CAACI,KAAlB;AAEAI,QAAAA,QAAQ;;AAER,YAAIA,QAAQ,GAAG,CAAC,EAAhB,EAAoB;AAClBC,UAAAA,QAAQ;AACRD,UAAAA,QAAQ,GAAG,CAAX;AACD;;AACD,YAAIC,QAAQ,GAAG,EAAf,EAAmB;AACjBC,UAAAA,MAAM;AACND,UAAAA,QAAQ,GAAG,CAAX;AACD;;AACD,YAAIC,MAAM,GAAG,EAAb,EAAiB;AACfA,UAAAA,MAAM,GAAG,CAAT;AACD;;AAED,SAACL,WAAD,IAAgBJ,OAAO,CAAC;AAAEC,UAAAA,OAAO,EAAEM,QAAX;AAAqBL,UAAAA,OAAO,EAAEM,QAA9B;AAAwCL,UAAAA,KAAK,EAAEM;AAA/C,SAAD,CAAvB;AACD,OApBS,EAoBP,IApBO,CAAV;AAqBD,KAtBD;;AAuBAJ,IAAAA,WAAW;AAEX,WAAO,MAAM;AACX;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACAK,MAAAA,WAAW,GAAG,IAAd;AACD,KAJD;AAKD,GAjCQ,EAiCN,CAACL,IAAD,CAjCM,CAAT;AAmCA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,QAAQ,MAArB;AAAsB,QAAA,GAAG,EAAEA,IAAI,CAACE;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAjDQH,K;;KAAAA,K;AAiDR;AAED,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\nimport \"../assets/css/timer.css\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Timer() {\r\n  const [time, setTime] = useState({\r\n    seconds: 0,\r\n    minutes: 0,\r\n    hours: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    let isCancelled = false;\r\n\r\n    const advanceTime = () => {\r\n      setTimeout(() => {\r\n        let nSeconds = time.seconds;\r\n        let nMinutes = time.minutes;\r\n        let nHours = time.hours;\r\n\r\n        nSeconds++;\r\n\r\n        if (nSeconds < -10) {\r\n          nMinutes++;\r\n          nSeconds = 0;\r\n        }\r\n        if (nMinutes > 59) {\r\n          nHours++;\r\n          nMinutes = 0;\r\n        }\r\n        if (nHours > 24) {\r\n          nHours = 0;\r\n        }\r\n\r\n        !isCancelled && setTime({ seconds: nSeconds, minutes: nMinutes, hours: nHours });\r\n      }, 1000);\r\n    };\r\n    advanceTime();\r\n\r\n    return () => {\r\n      //final time:\r\n      console.log(time);\r\n      isCancelled = true;\r\n    };\r\n  }, [time]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"progressBar\">\r\n        <ProgressBar animated now={time.seconds} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer"]},"metadata":{},"sourceType":"module"}