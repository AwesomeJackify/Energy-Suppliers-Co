{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jackg\\\\OneDrive\\\\Desktop\\\\Jive\\\\frontend\\\\src\\\\components\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../assets/css/Header.css\";\nimport ReactDOM from \"react-dom\";\nimport Tag from './Tag/Tag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Header() {\n  _s();\n\n  const [tags, setTags] = useState([]);\n  const tagInput = /*#__PURE__*/React.createRef();\n\n  const pushTextToTags = inputText => {\n    let newTagElement;\n\n    if (inputText[inputText.length - 1] === ' ') {\n      if (tags.includes(inputText)) {\n        console.log(\"hi\");\n      }\n\n      newTagElement = inputText.slice(0, inputText.length - 1);\n      tagInput.current.value = '';\n      setTags([...tags, newTagElement]);\n\n      if (tags.length === 2) {\n        document.getElementById(\"userInput\").style.visibility = \"hidden\";\n      }\n    }\n  };\n\n  const cullTextFromTags = textToRemove => {\n    setTags(tags.filter(index => index !== textToRemove));\n\n    if (tags.length === 3) {\n      document.getElementById(\"userInput\").style.visibility = \"visible\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header__tagArea\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header__tagArea--tagContainer\",\n          children: tags.map((tag, index) => /*#__PURE__*/_jsxDEV(Tag, {\n            text: tag,\n            cullTextFromTags: cullTextFromTags\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 52\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"userInput\",\n          placeholder: \"Tags\",\n          ref: tagInput,\n          type: \"text\",\n          id: \"userInput\",\n          onChange: event => pushTextToTags(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"DL0uTSUGlGEljgppeJDEmbue1U0=\");\n\n_c = Header;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/jackg/OneDrive/Desktop/Jive/frontend/src/components/Header.js"],"names":["React","useState","ReactDOM","Tag","Header","tags","setTags","tagInput","createRef","pushTextToTags","inputText","newTagElement","length","includes","console","log","slice","current","value","document","getElementById","style","visibility","cullTextFromTags","textToRemove","filter","index","map","tag","event","target","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,0BAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,WAAhB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMM,QAAQ,gBAAGP,KAAK,CAACQ,SAAN,EAAjB;;AACA,QAAMC,cAAc,GAAGC,SAAS,IAAI;AAChC,QAAIC,aAAJ;;AACA,QAAID,SAAS,CAACA,SAAS,CAACE,MAAV,GAAiB,CAAlB,CAAT,KAAgC,GAApC,EAAwC;AACpC,UAAIP,IAAI,CAACQ,QAAL,CAAcH,SAAd,CAAJ,EAA6B;AACzBI,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH;;AACDJ,MAAAA,aAAa,GAAGD,SAAS,CAACM,KAAV,CAAgB,CAAhB,EAAmBN,SAAS,CAACE,MAAV,GAAiB,CAApC,CAAhB;AACAL,MAAAA,QAAQ,CAACU,OAAT,CAAiBC,KAAjB,GAAyB,EAAzB;AACAZ,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUM,aAAV,CAAD,CAAP;;AACA,UAAIN,IAAI,CAACO,MAAL,KAAc,CAAlB,EAAoB;AAChBO,QAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,CAA2CC,UAA3C,GAAwD,QAAxD;AACH;AAEJ;AACJ,GAdD;;AAgBA,QAAMC,gBAAgB,GAAGC,YAAY,IAAI;AACrClB,IAAAA,OAAO,CAACD,IAAI,CAACoB,MAAL,CAAYC,KAAK,IAAIA,KAAK,KAAKF,YAA/B,CAAD,CAAP;;AACA,QAAInB,IAAI,CAACO,MAAL,KAAc,CAAlB,EAAoB;AAChBO,MAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,CAA2CC,UAA3C,GAAwD,SAAxD;AACH;AACJ,GALD;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAG,QAAjB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAG,KAAjB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAE,+BAAhB;AAAA,oBAEQjB,IAAI,CAACsB,GAAL,CAAS,CAACC,GAAD,EAAKF,KAAL,kBAAc,QAAC,GAAD;AAAiB,YAAA,IAAI,EAAEE,GAAvB;AAA4B,YAAA,gBAAgB,EAAEL;AAA9C,aAAUG,KAAV;AAAA;AAAA;AAAA;AAAA,kBAAvB;AAFR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAO,UAAA,SAAS,EAAG,WAAnB;AAA+B,UAAA,WAAW,EAAC,MAA3C;AAAkD,UAAA,GAAG,EAAEnB,QAAvD;AAAiE,UAAA,IAAI,EAAG,MAAxE;AAA+E,UAAA,EAAE,EAAC,WAAlF;AAA8F,UAAA,QAAQ,EAAEsB,KAAK,IAAEpB,cAAc,CAACoB,KAAK,CAACC,MAAN,CAAaZ,KAAd;AAA7H;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA1CQd,M;;KAAAA,M;AA6CTF,QAAQ,CAAC6B,MAAT,eAAgB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA2BZ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA3B;AACA,eAAehB,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../assets/css/Header.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Tag from './Tag/Tag';\r\n\r\nfunction Header() {\r\n    const [tags, setTags] = useState([]);\r\n    const tagInput = React.createRef();\r\n    const pushTextToTags = inputText => {\r\n        let newTagElement;\r\n        if (inputText[inputText.length-1]===' '){\r\n            if (tags.includes(inputText)){\r\n                console.log(\"hi\");\r\n            }\r\n            newTagElement = inputText.slice(0,(inputText.length-1))\r\n            tagInput.current.value = '';\r\n            setTags([...tags, newTagElement]);\r\n            if (tags.length===2){\r\n                document.getElementById(\"userInput\").style.visibility = \"hidden\";\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    const cullTextFromTags = textToRemove => {\r\n        setTags(tags.filter(index => index !== textToRemove));\r\n        if (tags.length===3){\r\n            document.getElementById(\"userInput\").style.visibility = \"visible\";\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = \"header\">\r\n            <div className = \"box\">\r\n                <div className=\"header__tagArea\">\r\n                    <div className= \"header__tagArea--tagContainer\">\r\n                        {\r\n                            tags.map((tag,index)=>(<Tag key={index} text={tag} cullTextFromTags={cullTextFromTags}/>))\r\n                        }\r\n                    </div>\r\n                    <input className = \"userInput\" placeholder=\"Tags\" ref={tagInput} type = \"text\" id=\"userInput\" onChange={event=>pushTextToTags(event.target.value)}/>\r\n                </div>\r\n            </div>\r\n                \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nReactDOM.render(<Header/>, document.getElementById('root'));\r\nexport default Header\r\n\r\n"]},"metadata":{},"sourceType":"module"}